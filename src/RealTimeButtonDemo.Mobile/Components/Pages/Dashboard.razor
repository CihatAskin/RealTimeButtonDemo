@page "/dashboard"
@using RealTimeButtonDemo.Mobile.Services
@using RealTimeButtonDemo.Shared.Components
@inject MauiAuthenticationService AuthService
@inject NavigationManager Navigation

<div class="dashboard-container">
    <div class="dashboard-header">
        <h1>MAUI Dashboard</h1>
        <div class="user-info">
            <span>Welcome, @currentUsername</span>
            <button @onclick="Logout" class="btn btn-secondary btn-sm">Logout</button>
        </div>
    </div>

    @if (isAuthenticated)
    {
        <div class="button-demo-section">
            <SharedButton RoomId="mobile-room" Token="@currentToken" ApiBaseUrl="@apiBaseUrl" />
        </div>
        
        <div class="mobile-info">
            <div class="info-card">
                <h3>Mobile Features</h3>
                <ul>
                    <li>✅ Cross-platform authentication with SecureStorage</li>
                    <li>✅ Real-time SignalR connection</li>
                    <li>✅ Shared UI component between Web and Mobile</li>
                    <li>✅ Mobile-optimized interface</li>
                </ul>
            </div>
            
            <div class="info-card">
                <h3>Connection Info</h3>
                <p><strong>API Server:</strong> @apiBaseUrl</p>
                <p><strong>Room:</strong> mobile-room</p>
                <p><strong>Platform:</strong> .NET MAUI</p>
            </div>
        </div>
    }
    else
    {
        <div class="loading-container">
            <p>Checking authentication...</p>
        </div>
    }
</div>

@code {
    private bool isAuthenticated = false;
    private string currentToken = "";
    private string currentUsername = "";
    private string apiBaseUrl = "http://localhost:5000";

    protected override async Task OnInitializedAsync()
    {
        await CheckAuthentication();
    }

    private async Task CheckAuthentication()
    {
        isAuthenticated = await AuthService.IsAuthenticatedAsync();
        
        if (isAuthenticated)
        {
            currentToken = await AuthService.GetTokenAsync() ?? "";
            currentUsername = await AuthService.GetUsernameAsync() ?? "User";
        }
        else
        {
            Navigation.NavigateTo("/login");
        }
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }
}

<style>
    .dashboard-container {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    .dashboard-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding-bottom: 20px;
        border-bottom: 1px solid #eee;
    }

    .dashboard-header h1 {
        margin: 0;
        color: #333;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .user-info span {
        font-weight: 500;
        color: #666;
    }

    .button-demo-section {
        margin-bottom: 30px;
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 10px;
    }

    .mobile-info {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-top: 30px;
    }

    .info-card {
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .info-card h3 {
        margin: 0 0 15px 0;
        color: #333;
    }

    .info-card ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .info-card li {
        padding: 5px 0;
        color: #666;
    }

    .info-card p {
        margin: 5px 0;
        color: #666;
    }

    .loading-container {
        text-align: center;
        padding: 50px;
        color: #666;
    }

    .btn {
        display: inline-block;
        padding: 8px 16px;
        font-size: 14px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-align: center;
        text-decoration: none;
        transition: background-color 0.3s ease;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }

    .btn-sm {
        padding: 5px 10px;
        font-size: 12px;
    }

    @media (max-width: 768px) {
        .dashboard-header {
            flex-direction: column;
            gap: 15px;
            text-align: center;
        }
        
        .mobile-info {
            grid-template-columns: 1fr;
        }
    }
</style>